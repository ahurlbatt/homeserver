- name: Get zfs to mount everything it knows about
  ansible.builtin.shell: zfs mount -a
  changed_when: false
  ignore_errors: true

- name: Check existence of dataset
  ansible.builtin.command: zfs list -H -o name
  register: existing_zfs_objects
  changed_when: false
  check_mode: false

- name: Unknown dataset found
  ansible.builtin.fail:
    msg: "Existing dataset(s) found with name(s): {{ existing_zfs_objects.stdout_lines | join(', ') }}. Expected: {{ all_zfs_objects | join(', ') }}."
  when: existing_zfs_objects.stdout != "" and existing_zfs_objects.stdout_lines | difference(all_zfs_objects) | length > 0

- name: Create parent dataset for nextcloud
  ansible.builtin.command: zfs create {{ zfs_create_options_dataset_nextcloud }}
  vars:
    zfs_create_options_dataset_nextcloud: "{{ dataset_nextcloud_parent_options | map('quote') | map('regex_replace', '^', '-o ') | join(' ') }} {{ dataset_nextcloud_full_name | quote }}"
  args:
    creates: "/{{ dataset_nextcloud_full_name }}"

- name: Create dataset for nextcloud
  ansible.builtin.command: zfs create {{ zfs_create_options_dataset_nextcloud_data }}
  vars:
    zfs_create_options_dataset_nextcloud_data: "{{ dataset_nextcloud_data_options | map('quote') | map('regex_replace', '^', '-o ') | join(' ') }} {{ dataset_nextcloud_data_full_name | quote }}"
  args:
    creates: "/{{ dataset_nextcloud_data_full_name }}"

- name: Create dataset for db
  ansible.builtin.command: zfs create {{ zfs_create_options_dataset_nextcloud_db }}
  vars:
    zfs_create_options_dataset_nextcloud_db: "{{ dataset_nextcloud_db_options | map('quote') | map('regex_replace', '^', '-o ') | join(' ') }} {{ dataset_nextcloud_db_full_name | quote }}"
  args:
    creates: "/{{ dataset_nextcloud_db_full_name }}"

- name: Create dataset for monitoring
  ansible.builtin.command: zfs create {{ zfs_create_options_dataset_monitoring }}
  vars:
    zfs_create_options_dataset_monitoring: "{{ dataset_monitoring_options | map('quote') | map('regex_replace', '^', '-o ') | join(' ') }} {{ dataset_monitoring_full_name | quote }}"
  args:
    creates: "/{{ dataset_monitoring_full_name }}"

- name: Create dataset for influxdb
  ansible.builtin.command: zfs create {{ zfs_create_options_dataset_influxdb }}
  vars:
      zfs_create_options_dataset_influxdb: "{{ dataset_influxdb_options | map('quote') | map('regex_replace', '^', '-o ') | join(' ') }} {{ dataset_influxdb_full_name | quote }}"
  args:
      creates: "/{{ dataset_influxdb_full_name }}"