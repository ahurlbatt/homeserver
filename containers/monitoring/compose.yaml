services:

  grafana:
    image: grafana/grafana-enterprise:10.0.1
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana-provisioning:/etc/grafana/provisioning
    networks:
      - caddy
      - monitoring
      - mail
    env_file:
      - grafana.env
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  loki:
    image: grafana/loki:2.8.3
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml
      - loki:/loki
    networks:
      - monitoring
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  promtail:
    image: grafana/promtail:2.8.3
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log:/var/hostlogs:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - monitoring

  influxdb:
    image: influxdb:2.7.1
    container_name: influxdb
    restart: unless-stopped
    volumes:
      - ./influxconfig:/etc/influxdb2
      - influxdb:/var/lib/influxdb2
    networks:
      - monitoring
    env_file:
      - ./influxdb.env

  telegraf:
    image: telegraf:1.27.4
    container_name: telegraf
    restart: unless-stopped
    user: telegraf:${DOCKER_SOCKET_GROUP_ID?err}
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - monitoring
    extra_hosts:
      - "host.docker.internal:host-gateway"
    env_file:
      - ./telegraf.env
    environment:
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
      - HOST_RUN=/hostfs/run
      - HOST_MOUNT_PREFIX=/hostfs

networks:
  monitoring:
    name: monitoring
    internal: true
  caddy:
    name: caddy
    internal: true
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/24
  mail:
    name: mail
    internal: true

volumes:
  grafana:
    name: grafana
  influxdb:
    name: influxdb
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${INFLUXDB_DATA_DIR?err}
  loki:
    name: loki
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${LOKI_DATA_DIR?err}
