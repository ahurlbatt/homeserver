- name: Server setup
  hosts: myservers
  become: true
  vars:
    zpool_name: tank
    zpool_options:
      - ashift=12
    zpool_raid_type: raidz2
    dataset_nextcloud_name: nextcloud
    dataset_nextcloud_options:
      - compression=lz4
    dataset_db_name: mariadb
    dataset_db_options:
      - recordsize=16k
      - primarycache=metadata
      - compression=lz4
      - logbias=throughput
      - atime=off
    all_zfs_objects:
      - "{{ zpool_name }}"
      - "{{ zpool_name + '/' + dataset_nextcloud_name }}"
      - "{{ zpool_name + '/' + dataset_db_name }}"
  tasks:
    - name: Allow memory over commit
      ansible.posix.sysctl:
        name: vm.overcommit_memory
        value: "1"
    - name: Install required things
      block:
        - name: Add contrib and backports repositories
          ansible.builtin.apt_repository:
            repo: "{{ item }}"
          loop:
            - "deb http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main contrib"
            - "deb-src http://deb.debian.org/debian {{ ansible_distribution_release }}-backports main contrib"
        - name: Install Linux Headers and update cache
          ansible.builtin.apt:
            name:
              - linux-headers-amd64
            update_cache: true
        - name: Install zfs and docker
          ansible.builtin.apt:
            update_cache: false
            name:
              - docker
              - docker-compose
              - zfsutils-linux
              - zfs-dkms
    - name: Check existence of zpool
      ansible.builtin.command: zpool list -H -o name
      register: existing_zpools
      changed_when: false
    - name: Unknown zpool found
      ansible.builtin.fail:
        msg: "Existing zpool(s) found with name(s): {{ existing_zpools.stdout_lines | join(', ') }}"
      when: existing_zpools.stdout != "" and existing_zpools.stdout != zpool_name
    - name: Import or create zpool
      block:
      - name: Import zpool
        ansible.builtin.command: zpool import {{ zpool_name }}
        register: zpool_import_results
        changed_when: false
        ignore_errors: true
#        TODO: Handle zpools that come from other servers by asking for confirmation
      - name: Create zpool
        block:
          - name: Get the boot drive
            ansible.builtin.shell: df /boot | tail -1 | awk '{print $1}' | sed 's/[0-9]*$//'
            register: boot_drive
            changed_when: false
          - name: Get a list of drives that are not the boot drive
            ansible.builtin.shell: lsblk -dpn -I 8 -o NAME -l | sed "\&{{ boot_drive.stdout | quote }}&d"
            register: zpool_drives
            changed_when: false
          - name: Create zpool
            ansible.builtin.command: zpool create -o {{ zpool_options | map('quote') | join(' -o ') }} {{ zpool_name | quote }} {{ zpool_raid_type | quote }} {{ zpool_drives.stdout_lines | map('quote') | join(' ') }}
        when: zpool_import_results.rc != 0
      when: existing_zpools.stdout != zpool_name
    - name : Get zfs to mount everything it knows about
      ansible.builtin.shell: zfs mount -a
      changed_when: false
      ignore_errors: true
    - name: Check existence of dataset
      ansible.builtin.command: zfs list -H -o name
      register: existing_zfs_objects
      changed_when: false
    - name: Unknown dataset found
      ansible.builtin.fail:
          msg: "Existing dataset(s) found with name(s): {{ existing_zfs_objects.stdout_lines | join(', ') }}. Expected: {{ all_zfs_objects | join(', ') }}."
      when: existing_zfs_objects.stdout != "" and existing_zfs_objects.stdout_lines | difference(all_zfs_objects) | length > 0
    - name: Create dataset for nextcloud
      ansible.builtin.command: zfs create -o {{ dataset_nextcloud_options | map('quote') | join(' -o ') }} {{ zpool_name | quote }}/{{ dataset_nextcloud_name | quote }}
      args:
        creates: "{{ '/' + zpool_name + '/' + dataset_nextcloud_name }}"
    - name: Create dataset for db
      ansible.builtin.command: zfs create -o {{ dataset_db_options | map('quote') | join(' -o ') }} {{ zpool_name | quote }}/{{ dataset_db_name | quote }}
      args:
        creates: "{{ '/' + zpool_name + '/' + dataset_db_name }}"